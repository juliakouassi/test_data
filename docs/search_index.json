[["daten-importieren.html", "Chapter 4 Daten importieren 4.1 Datenimport 4.2 Übersicht über Daten", " Chapter 4 Daten importieren Wir verwenden den Syntax aus dem tidyverse, d.h. die Kernfunktionen sind Verben, die mit einer Pipe verbunden werden. Sehr gute Anleitungen zum Beispieldatensatz von StarWars gibt es hier und als Tutorial, Cheatsheet data import (PDF). 4.1 Datenimport R kann viele unterschiedlichen Datenquellen verarbeiten (Menü &gt; File &gt; Import Dataset). Die meisten unserer Daten werden wir entweder aus Programmpaketen verwenden oder selbst einlesen. Daten aus Programmpaketen Viele Programmbibliotheken haben bereits Datensätze hinterlegt, die sich direkt aufrufen lassen. Bekannt sind mtcars und starwars, die im tidyverse Paket hinterlegt sind. # Übersicht über Standard-Datensets library(help = &quot;datasets&quot;) ??mtcars ## starting httpd help server ... done mtcars ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1 ## Hornet Sportabout 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2 ## Valiant 18.1 6 225.0 105 2.76 3.460 20.22 1 0 3 1 ## Duster 360 14.3 8 360.0 245 3.21 3.570 15.84 0 0 3 4 ## Merc 240D 24.4 4 146.7 62 3.69 3.190 20.00 1 0 4 2 ## Merc 230 22.8 4 140.8 95 3.92 3.150 22.90 1 0 4 2 ## Merc 280 19.2 6 167.6 123 3.92 3.440 18.30 1 0 4 4 ## Merc 280C 17.8 6 167.6 123 3.92 3.440 18.90 1 0 4 4 ## Merc 450SE 16.4 8 275.8 180 3.07 4.070 17.40 0 0 3 3 ## Merc 450SL 17.3 8 275.8 180 3.07 3.730 17.60 0 0 3 3 ## Merc 450SLC 15.2 8 275.8 180 3.07 3.780 18.00 0 0 3 3 ## Cadillac Fleetwood 10.4 8 472.0 205 2.93 5.250 17.98 0 0 3 4 ## Lincoln Continental 10.4 8 460.0 215 3.00 5.424 17.82 0 0 3 4 ## Chrysler Imperial 14.7 8 440.0 230 3.23 5.345 17.42 0 0 3 4 ## Fiat 128 32.4 4 78.7 66 4.08 2.200 19.47 1 1 4 1 ## Honda Civic 30.4 4 75.7 52 4.93 1.615 18.52 1 1 4 2 ## Toyota Corolla 33.9 4 71.1 65 4.22 1.835 19.90 1 1 4 1 ## Toyota Corona 21.5 4 120.1 97 3.70 2.465 20.01 1 0 3 1 ## Dodge Challenger 15.5 8 318.0 150 2.76 3.520 16.87 0 0 3 2 ## AMC Javelin 15.2 8 304.0 150 3.15 3.435 17.30 0 0 3 2 ## Camaro Z28 13.3 8 350.0 245 3.73 3.840 15.41 0 0 3 4 ## Pontiac Firebird 19.2 8 400.0 175 3.08 3.845 17.05 0 0 3 2 ## Fiat X1-9 27.3 4 79.0 66 4.08 1.935 18.90 1 1 4 1 ## Porsche 914-2 26.0 4 120.3 91 4.43 2.140 16.70 0 1 5 2 ## Lotus Europa 30.4 4 95.1 113 3.77 1.513 16.90 1 1 5 2 ## Ford Pantera L 15.8 8 351.0 264 4.22 3.170 14.50 0 1 5 4 ## Ferrari Dino 19.7 6 145.0 175 3.62 2.770 15.50 0 1 5 6 ## Maserati Bora 15.0 8 301.0 335 3.54 3.570 14.60 0 1 5 8 ## Volvo 142E 21.4 4 121.0 109 4.11 2.780 18.60 1 1 4 2 # Diese Daten werden häufig für Erklärungen verwendet library(tidyverse) ## Warning: package &#39;tidyverse&#39; was built under R version 3.6.3 ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.5 v purrr 0.3.4 ## v tibble 3.1.1 v dplyr 1.0.6 ## v tidyr 1.1.3 v stringr 1.4.0 ## v readr 1.4.0 v forcats 0.5.1 ## Warning: package &#39;tibble&#39; was built under R version 3.6.3 ## Warning: package &#39;tidyr&#39; was built under R version 3.6.3 ## Warning: package &#39;readr&#39; was built under R version 3.6.3 ## Warning: package &#39;purrr&#39; was built under R version 3.6.3 ## Warning: package &#39;dplyr&#39; was built under R version 3.6.3 ## Warning: package &#39;stringr&#39; was built under R version 3.6.3 ## Warning: package &#39;forcats&#39; was built under R version 3.6.3 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() ??starwars starwars ## # A tibble: 87 x 14 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke Sk~ 172 77 blond fair blue 19 male mascu~ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu~ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl~ red 33 none mascu~ ## 4 Darth V~ 202 136 none white yellow 41.9 male mascu~ ## 5 Leia Or~ 150 49 brown light brown 19 fema~ femin~ ## 6 Owen La~ 178 120 brown, gr~ light blue 52 male mascu~ ## 7 Beru Wh~ 165 75 brown light blue 47 fema~ femin~ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu~ ## 9 Biggs D~ 183 84 black light brown 24 male mascu~ ## 10 Obi-Wan~ 182 77 auburn, w~ fair blue-gray 57 male mascu~ ## # ... with 77 more rows, and 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt; Daten lokal importieren RStudio bietet eine bequeme Import-Funktion sowohl für Textdaten (CSV) als auch bereits vorhandene Datenstrukturen anderer Programme (EXCEL, SPSS, etc.). File &gt; Import Dataset. Die Funktion eignet sich dann immer besonders gut, wenn die Daten weiterhin lokal bearbeitet werden. Daten online einlesen Am einfachsten lassen sich Daten direkt über eine URL einlesen. Dafür müssen die Daten idealerweise im CSV-Format vorliegen. Das ist eine einfache Textdatei, in der die erste Zeile die Namen der Spalten definiert und jede weitere Zeile einen Datensatz definiert. CSV-Daten sind in der Regel mit einem Komma getrennt und haben keine Leerzeichen. Unser Datensatz students liegt auf Github, beachten Sie hierzu das Codebuch, das den Datensatz erklärt. Wir verwenden den Befehl readr() um die CSV-Datei zu importieren und als s zu bezeichnen. Der Datensatz ist bereits im tidy-Format angelegt, d.h. Spalte entspricht einer Variable und jede Zeile einer Beobachtung. Lesehinweis: von links nach rechts: der Datensatz eines Falls, z.B. library(readr) s &lt;- read_csv(&quot;https://raw.githubusercontent.com/hdm-crpr/226308b_Data_Literacy/main/data/students/students.csv&quot;) ## ## -- Column specification -------------------------------------------------------- ## cols( ## id = col_double(), ## name = col_double(), ## name_first = col_character(), ## sex = col_double(), ## crpr = col_double(), ## height = col_double(), ## weight = col_double(), ## age = col_double(), ## age_real = col_double(), ## smoke = col_double(), ## phone = col_double(), ## tatoo = col_double(), ## eyes = col_double(), ## hair = col_double(), ## location = col_character(), ## county = col_character() ## ) s ## # A tibble: 38 x 16 ## id name name_first sex crpr height weight age age_real smoke phone ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 Charlotte 1 1 167 57 2 21 1 1 ## 2 2 2 Jana 1 1 165 55 4 26 1 2 ## 3 3 3 Lena 1 1 175 65 2 22 1 1 ## 4 4 4 Serena 1 2 172 59 2 21 1 1 ## 5 5 5 Anna 1 2 163 52 1 18 1 2 ## 6 6 6 Ruth 1 2 177 63 2 20 1 2 ## 7 7 7 Maria 1 2 172 64 2 20 1 1 ## 8 8 8 Eva 1 1 169 59 4 25 1 2 ## 9 9 9 Karl 2 1 184 82 4 26 2 2 ## 10 10 10 Ahmed 2 2 174 70 3 23 2 2 ## # ... with 28 more rows, and 5 more variables: tatoo &lt;dbl&gt;, eyes &lt;dbl&gt;, ## # hair &lt;dbl&gt;, location &lt;chr&gt;, county &lt;chr&gt; 4.2 Übersicht über Daten # prüft, ob der Datensatz ein tibble ist (jede Zeile eine Beobachtung) is_tibble(s) ## [1] TRUE # liefert die Tabellenübersicht in RStudio view(s) # liefert eine Zusammenfassung des Datensatzes glimpse(s) ## Rows: 38 ## Columns: 16 ## $ id &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, ~ ## $ name &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, ~ ## $ name_first &lt;chr&gt; &quot;Charlotte&quot;, &quot;Jana&quot;, &quot;Lena&quot;, &quot;Serena&quot;, &quot;Anna&quot;, &quot;Ruth&quot;, &quot;Mar~ ## $ sex &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 3, 1, 3, 1,~ ## $ crpr &lt;dbl&gt; 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1,~ ## $ height &lt;dbl&gt; 167, 165, 175, 172, 163, 177, 172, 169, 184, 174, 188, 168,~ ## $ weight &lt;dbl&gt; 57, 55, 65, 59, 52, 63, 64, 59, 82, 70, 78, 62, 59, 57, 58,~ ## $ age &lt;dbl&gt; 2, 4, 2, 2, 1, 2, 2, 4, 4, 3, 1, 2, 3, 2, 1, 3, 4, 1, 1, 1,~ ## $ age_real &lt;dbl&gt; 21, 26, 22, 21, 18, 20, 20, 25, 26, 23, 19, 20, 23, 21, 18,~ ## $ smoke &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1,~ ## $ phone &lt;dbl&gt; 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2,~ ## $ tatoo &lt;dbl&gt; 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2,~ ## $ eyes &lt;dbl&gt; 4, 2, 3, 1, 4, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 1, 4, 3, 2,~ ## $ hair &lt;dbl&gt; 2, 3, 3, 4, 4, 2, 4, 4, 4, 4, 3, 3, 4, 1, 2, 3, 4, 4, 4, 3,~ ## $ location &lt;chr&gt; &quot;Stuttgart&quot;, &quot;Ludwigsburg&quot;, &quot;Esslingen&quot;, &quot;Stuttgart&quot;, &quot;Kemp~ ## $ county &lt;chr&gt; &quot;BW&quot;, &quot;BW&quot;, &quot;BW&quot;, &quot;BW&quot;, &quot;BAY&quot;, &quot;RP&quot;, &quot;BW&quot;, &quot;BW&quot;, &quot;BW&quot;, &quot;BW&quot;~ # Als Alternative lässt sich skimr einsetzen library(skimr) ## Warning: package &#39;skimr&#39; was built under R version 3.6.3 skim(s) Table 4.1: Data summary Name s Number of rows 38 Number of columns 16 _______________________ Column type frequency: character 3 numeric 13 ________________________ Group variables None Variable type: character skim_variable n_missing complete_rate min max empty n_unique whitespace name_first 0 1 3 9 0 37 0 location 0 1 3 12 0 20 0 county 0 1 2 3 0 6 0 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist id 0 1 19.50 11.11 1 10.25 19.5 28.75 38  name 0 1 19.50 11.11 1 10.25 19.5 28.75 38  sex 0 1 1.32 0.62 1 1.00 1.0 1.00 3  crpr 0 1 1.39 0.50 1 1.00 1.0 2.00 2  height 0 1 170.45 8.17 159 163.25 169.0 175.75 189  weight 0 1 60.24 8.48 48 54.00 59.0 64.00 83  age 0 1 2.24 1.13 1 1.00 2.0 3.00 4  age_real 0 1 21.26 2.80 17 19.00 21.0 23.00 27  smoke 0 1 1.24 0.43 1 1.00 1.0 1.00 2  phone 0 1 1.50 0.51 1 1.00 1.5 2.00 2  tatoo 0 1 1.24 0.43 1 1.00 1.0 1.00 2  eyes 0 1 2.74 0.95 1 2.00 3.0 3.00 4  hair 0 1 3.26 0.89 1 3.00 3.5 4.00 4  "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
